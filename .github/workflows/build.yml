# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r vertical-timeline/requirements.txt
        python -m pip install lib/dynamodb-repository/
        python -m pip install lib/verticaltimeline-common/
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: >
        AWS_DEFAULT_REGION=us-east-1
        AWS_ACCESS_KEY_ID=abc 
        AWS_SECRET_ACCESS_KEY=xyz 
        pytest tests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Prepare configuration file
      run: |
        touch application.cfg
        echo "SECRET_KEY = '${{ secrets.SECRET_KEY }}'"                                                    >> application.cfg
        echo "AWS_DEFAULT_REGION = 'eu-west-2'"                                                            >> application.cfg
        echo "AWS_COGNITO_DOMAIN = '${{ secrets.AWS_COGNITO_DOMAIN }}'"                                    >> application.cfg
        echo "AWS_COGNITO_USER_POOL_ID = '${{ secrets.AWS_COGNITO_USER_POOL_ID }}'"                        >> application.cfg
        echo "AWS_COGNITO_USER_POOL_CLIENT_ID = '${{ secrets.AWS_COGNITO_USER_POOL_CLIENT_ID }}'"          >> application.cfg
        echo "AWS_COGNITO_USER_POOL_CLIENT_SECRET = '${{ secrets.AWS_COGNITO_USER_POOL_CLIENT_SECRET }}'"  >> application.cfg
        echo "AWS_COGNITO_REDIRECT_URL = ''"                                                               >> application.cfg
        echo "TRELLO_API_KEY = '${{ secrets.TRELLO_API_KEY }}'"                                            >> application.cfg
        echo "TRELLO_APP_NAME = 'Beta Vertical TimeLine App'"                                              >> application.cfg
        echo "TRELLO_AUTH_SCOPE = 'read'"                                                                  >> application.cfg
      working-directory: vertical-timeline/webapp

    - name: SAM Build
      run: sam build

    - name: SAM Deploy
      run: sam deploy --role-arn ${{ secrets.AWS_ACCESS_ROLE_ARN }} --no-fail-on-empty-changeset 

    - name: Deploy CDN
      run: make cdn
      working-directory: vertical-timeline
