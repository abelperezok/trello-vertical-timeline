AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Trello Vertical timeline

  Sample SAM Template for Trello Vertical timeline

Globals:
  Function:
    Timeout: 10

Parameters:
  PoolDomainName:
    Type: String
    Description: Domain name for Cognito Hosted UI
    Default: auth-flask-test

Resources:
  WebAppFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: vertical-timeline/
      Handler: webapp.lambda.app
      Runtime: python3.8
      Events:
        AllRequests:
          Type: HttpApi
          Properties:
            ApiId: !Ref PublicApi
            PayloadFormatVersion: "1.0"
    Metadata:
      BuildMethod: makefile

  PublicApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration: True

      # StageName: !Ref StageName
      # Tags:
      #   Tag: Value
      # AccessLogSettings:
      #   DestinationArn: !GetAtt AccessLogs.Arn
      #   Format: $context.requestId


  S3Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref PublicApi
      Description: S3 Integration for static files
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Sub ${StaticFilesBucket.WebsiteURL}/{proxy}
      IntegrationMethod: GET
      PayloadFormatVersion: 1.0

  StaticRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref PublicApi
      RouteKey: GET /static/{proxy+}
      Target: !Sub integrations/${S3Integration}


  # S3 bucket
  StaticFilesBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html


# User pool - simple configuration 
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      AdminCreateUserConfig: 
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes: 
        - email
      MfaConfiguration: "OFF"
      Policies: 
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      Schema: 
        - AttributeDataType: String
          Mutable: true
          Name: name
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: email
          Required: true
      UsernameAttributes: 
        - email

  # User Pool client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      AllowedOAuthFlows: 
        - code
        # - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes: 
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
        - profile
      ClientName: FlaskAppClient
      CallbackURLs:
        - http://localhost:5000/aws_cognito_redirect
        - https://w467k2ss1h.execute-api.eu-west-1.amazonaws.com/aws_cognito_redirect
      # LogoutURLs: 
      #   - !Sub "https://${WebSubdomainName}.${DomainName}"
      # ExplicitAuthFlows: 
      #   - ALLOW_USER_PASSWORD_AUTH
      #   - ALLOW_USER_SRP_AUTH
      #   - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: 30
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref UserPool

  # User pool domain name - set to 
  PoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Ref PoolDomainName
      UserPoolId: !Ref UserPool



Outputs:
  PublicApi:
    Description: API Gateway v2 endpoint URL for default stage for WebApp function
    Value: !Sub https://${PublicApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/
  StaticFilesBucket:
    Description: Static files bucket name
    Value: !Ref StaticFilesBucket
  UserPoolClientId:
      Description: UserPoolClient ID
      Value: !Ref UserPoolClient
  UserPoolId:
      Description: UserPool ID
      Value: !Ref UserPool
  UserPoolDomain:
      Description: UserPool Domain
      Value: !Ref PoolDomain